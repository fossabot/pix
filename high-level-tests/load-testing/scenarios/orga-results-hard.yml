config:
  phases:
    - duration: 60
      arrivalCount: 20
  payload:
    path: "../payload/{{ $environment }}/users.csv"
    fields:
      - "username"
      - "password"
    order: random
    skipHeader: true

scenarios:
  - name: 'Connexion Orga pour lecture des résultats participants'
    weight: 2
    flow:
      - log: "Scenario — Connexion Orga pour lecture des résultats participants"
      # Authenticate user
      - post:
          url: "/api/authentications"
          json:
            data:
              attributes:
                email: "{{ username }}"
                password: "{{ password }}"
          capture:
            - json: "$.data.attributes.token"
              as: "accessToken"
            - json: "$.data.id"
              as: "userId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get user profile memberships
      - get:
          url: "/api/users/{{ userId }}/memberships"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data[0].relationships.organization.data.id"
              as: "organizationId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaigns"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignId"

      # Get campaign
      - get:
          url: "/api/campaigns/{{ campaignId }}?include=targetProfile"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign report
      - get:
          url: "/api/campaigns/{{ campaignId }}/campaign-report"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      # Get campaign all participations
      - get:
          url: "/api/campaign-participations?filter[campaignId]={{ campaignId }}&include=user,campaign-participation-result&page[number]=1&page[size]=10"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaignParticipations"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignParticipation"

      # Get campaign participation
      - get:
          url: "/api/campaign-participations/{{ campaignParticipationId }}?include=user"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign participation result
      - get:
          url: "/api/campaign-participations/{{ campaignParticipationId }}/campaign-participation-result"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

  - name: 'Connexion Orga pour lecture des résultats collectifs'
    weight: 1
    flow:
      - log: "Scenario — Connexion Orga pour lecture des résultats collectifs"
      # Authenticate user
      - post:
          url: "/api/authentications"
          json:
            data:
              attributes:
                email: "{{ username }}"
                password: "{{ password }}"
          capture:
            - json: "$.data.attributes.token"
              as: "accessToken"
            - json: "$.data.id"
              as: "userId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get user profile memberships
      - get:
          url: "/api/users/{{ userId }}/memberships"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data[0].relationships.organization.data.id"
              as: "organizationId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaigns"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignId"

      # Get campaign
      - get:
          url: "/api/campaigns/{{ campaignId }}?include=targetProfile"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign report
      - get:
          url: "/api/campaigns/{{ campaignId }}/campaign-report"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      # Get campaign collective results
      - get:
          url: "/api/campaigns/{{ campaignId }}/collective-results"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign collective results
      - get:
          url: "/api/campaigns/{{ campaignId }}/collective-results"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

  - name: 'Connexion Orga pour lecture des résultats participants puis des résultats collectifs'
    weight: 3
    flow:
      - log: "Scenario — Connexion Orga pour lecture des résultats participants puis des résultats collectifs"
      # Authenticate user
      - post:
          url: "/api/authentications"
          json:
            data:
              attributes:
                email: "{{ username }}"
                password: "{{ password }}"
          capture:
            - json: "$.data.attributes.token"
              as: "accessToken"
            - json: "$.data.id"
              as: "userId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get user profile memberships
      - get:
          url: "/api/users/{{ userId }}/memberships"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data[0].relationships.organization.data.id"
              as: "organizationId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaigns"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignId"

      # Get campaign
      - get:
          url: "/api/campaigns/{{ campaignId }}?include=targetProfile"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign report
      - get:
          url: "/api/campaigns/{{ campaignId }}/campaign-report"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      # Get campaign all participations
      - get:
          url: "/api/campaign-participations?filter[campaignId]={{ campaignId }}&include=user,campaign-participation-result&page[number]=1&page[size]=10"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaignParticipations"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignParticipation"

      # Get campaign participation
      - get:
          url: "/api/campaign-participations/{{ campaignParticipationId }}?include=user"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign participation result
      - get:
          url: "/api/campaign-participations/{{ campaignParticipationId }}/campaign-participation-result"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      # Get campaign collective results
      - get:
          url: "/api/campaigns/{{ campaignId }}/collective-results"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign collective results
      - get:
          url: "/api/campaigns/{{ campaignId }}/collective-results"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

  - name: 'Connexion Orga pour lecture des résultats collectifs puis des résultats participants'
    weight: 3
    flow:
      - log: "Scenario — Connexion Orga pour lecture des résultats collectifs puis des résultats participants"
      # Authenticate user
      - post:
          url: "/api/authentications"
          json:
            data:
              attributes:
                email: "{{ username }}"
                password: "{{ password }}"
          capture:
            - json: "$.data.attributes.token"
              as: "accessToken"
            - json: "$.data.id"
              as: "userId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get user profile memberships
      - get:
          url: "/api/users/{{ userId }}/memberships"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data[0].relationships.organization.data.id"
              as: "organizationId"

      # Get user profile
      - get:
          url: "/api/users/{{ userId }}"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get organizations campaigns
      - get:
          url: "/api/organizations/{{ organizationId }}/campaigns"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaigns"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignId"

      # Get campaign
      - get:
          url: "/api/campaigns/{{ campaignId }}?include=targetProfile"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign report
      - get:
          url: "/api/campaigns/{{ campaignId }}/campaign-report"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      # Get campaign collective results
      - get:
          url: "/api/campaigns/{{ campaignId }}/collective-results"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign collective results
      - get:
          url: "/api/campaigns/{{ campaignId }}/collective-results"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      # Get campaign all participations
      - get:
          url: "/api/campaign-participations?filter[campaignId]={{ campaignId }}&include=user,campaign-participation-result&page[number]=1&page[size]=10"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          capture:
            - json: "$.data"
              as: "campaignParticipations"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}

      - function: "getRandomCampaignParticipation"

      # Get campaign participation
      - get:
          url: "/api/campaign-participations/{{ campaignParticipationId }}?include=user"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      # Get campaign participation result
      - get:
          url: "/api/campaign-participations/{{ campaignParticipationId }}/campaign-participation-result"
          headers:
            Authorization: "Bearer {{ accessToken }}"

      - function: "getThinkingTime"
      - log: "User is thinking during {{ thinkingTime }} seconds"
      - think: {{ thinkingTime }}
